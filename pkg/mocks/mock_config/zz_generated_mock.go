// /*
// Copyright 2019 Alexander Eldeib.
// */

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/alexeldeib/incendiary-iguana/pkg/config (interfaces: Config)

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"

	autorest "github.com/Azure/go-autorest/autorest"
	gomock "github.com/golang/mock/gomock"
)

// MockConfig is a mock of Config interface
type MockConfig struct {
	ctrl     *gomock.Controller
	recorder *MockConfigMockRecorder
}

// MockConfigMockRecorder is the mock recorder for MockConfig
type MockConfigMockRecorder struct {
	mock *MockConfig
}

// NewMockConfig creates a new mock instance
func NewMockConfig(ctrl *gomock.Controller) *MockConfig {
	mock := &MockConfig{ctrl: ctrl}
	mock.recorder = &MockConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfig) EXPECT() *MockConfigMockRecorder {
	return m.recorder
}

// AuthorizeClient mocks base method
func (m *MockConfig) AuthorizeClient(arg0 *autorest.Client) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthorizeClient", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AuthorizeClient indicates an expected call of AuthorizeClient
func (mr *MockConfigMockRecorder) AuthorizeClient(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthorizeClient", reflect.TypeOf((*MockConfig)(nil).AuthorizeClient), arg0)
}

// DetectAuthorizer mocks base method
func (m *MockConfig) DetectAuthorizer() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DetectAuthorizer")
	ret0, _ := ret[0].(error)
	return ret0
}

// DetectAuthorizer indicates an expected call of DetectAuthorizer
func (mr *MockConfigMockRecorder) DetectAuthorizer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetectAuthorizer", reflect.TypeOf((*MockConfig)(nil).DetectAuthorizer))
}

// GetAuthorizer mocks base method
func (m *MockConfig) GetAuthorizer() (autorest.Authorizer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuthorizer")
	ret0, _ := ret[0].(autorest.Authorizer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAuthorizer indicates an expected call of GetAuthorizer
func (mr *MockConfigMockRecorder) GetAuthorizer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuthorizer", reflect.TypeOf((*MockConfig)(nil).GetAuthorizer))
}

// GetKeyvaultAuthorizer mocks base method
func (m *MockConfig) GetKeyvaultAuthorizer() (autorest.Authorizer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeyvaultAuthorizer")
	ret0, _ := ret[0].(autorest.Authorizer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKeyvaultAuthorizer indicates an expected call of GetKeyvaultAuthorizer
func (mr *MockConfigMockRecorder) GetKeyvaultAuthorizer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeyvaultAuthorizer", reflect.TypeOf((*MockConfig)(nil).GetKeyvaultAuthorizer))
}
