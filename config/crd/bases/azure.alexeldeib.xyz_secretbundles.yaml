
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: secretbundles.azure.alexeldeib.xyz
spec:
  group: azure.alexeldeib.xyz
  names:
    kind: SecretBundle
    listKind: SecretBundleList
    plural: secretbundles
    singular: secretbundle
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: SecretBundle is the Schema for the secretbundles API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SecretBundleSpec defines the desired state of SecretBundle
          properties:
            name:
              description: Name is the name the corresponding Keyvault Secret.
              type: string
            secrets:
              description: Secrets is a list of references to Keyvault secrets to
                sync to a single Kubernetes secret. The keys in the map will be the
                keys in the Kubernetes secret.
              items:
                properties:
                  name:
                    description: Name is the name the corresponding Keyvault Secret.
                    type: string
                  newName:
                    description: NewName is the desired name of the target Kubernetes
                      secret. Defaults to Name if not specified.
                    type: string
                  vault:
                    description: Vault is the name of the Keyvault where this secret
                      should be stored.
                    type: string
                required:
                - name
                - vault
                type: object
              minItems: 1
              type: array
          required:
          - name
          - secrets
          type: object
        status:
          description: SecretBundleStatus defines the observed state of SecretBundle
          properties:
            secrets:
              additionalProperties:
                type: string
              description: Secrets is map of named statuses for individual secrets.
              type: object
            state:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
