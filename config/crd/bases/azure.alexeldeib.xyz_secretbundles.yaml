
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: secretbundles.azure.alexeldeib.xyz
spec:
  group: azure.alexeldeib.xyz
  names:
    kind: SecretBundle
    listKind: SecretBundleList
    plural: secretbundles
    singular: secretbundle
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: SecretBundle is the Schema for the secretbundles API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SecretBundleSpec defines the desired state of SecretBundle
          properties:
            name:
              description: Name is the name the corresponding Keyvault Secret.
              type: string
            secrets:
              description: Secrets is a list of references to Keyvault secrets to
                sync to a single Kubernetes secret. The keys in the map will be the
                keys in the Kubernetes secret.
              items:
                description: SecretSpec defines the desired state of Secret
                properties:
                  localName:
                    description: LocalName is the desired name of the target Kubernetes
                      secret. Defaults to Name if not specified.
                    type: string
                  location:
                    description: Location is the Azure location of the resource group
                      (e.g., eastus2 or "West US"). Only required if Vault does not
                      exist. Must be used it conjuction with ResourceGroup and SubscriptionID
                    type: string
                  name:
                    description: Name is the name the corresponding Keyvault Secret.
                    type: string
                  resourceGroup:
                    description: ResourceGroup contains the Keyvault. Only required
                      if Vault does not exist. Must be used it conjuction with Location
                      and SubscriptionID.
                    type: string
                  subscriptionId:
                    description: SubscriptionID contains the Resource group. Is a
                      GUID. Only required if Vault does not exist. Must be used it
                      conjuction with Location and ResourceGroup.
                    type: string
                  vault:
                    description: Vault is the name of the Keyvault where this secret
                      should be stored.
                    type: string
                required:
                - name
                - vault
                type: object
              type: array
          required:
          - name
          - secrets
          type: object
        status:
          description: SecretBundleStatus defines the observed state of SecretBundle
          properties:
            available:
              description: Available is the number of desired secrets from Keyvault
                which were found.
              type: integer
            desired:
              description: 'Desired is len(spec.Secrets): it is the number of configured
                secrets in this object.'
              type: integer
            generation:
              description: Generation is the last reconciled generation.
              format: int64
              type: integer
            ready:
              description: Ready is the number of keys available for use in the target
                Kubernetes secret. status.Desired == status.Ready implies an application
                depending on all of these secrets could immediately begin using them.
              type: integer
            secrets:
              additionalProperties:
                description: SingleSecretStatus defines reusable status properties
                  of a single secret for composability.
                properties:
                  available:
                    description: Available is true when the secret is ready for use
                      in Kubernetes.
                    type: boolean
                  exists:
                    description: 'TODO(ace): distinguish meaning more clearly. Exists
                      is true when the secret exists in the remote Keyvault.'
                    type: boolean
                  lastKnownName:
                    description: LastKnownName is the name of this secret as seen
                      when it was last reconciled. This is useful for knowing when
                      to delete/recreate a secret.
                    type: string
                required:
                - available
                - exists
                - lastKnownName
                type: object
              description: Secrets is map of named statuses for individual secrets.
              type: object
          required:
          - available
          - desired
          - generation
          - ready
          - secrets
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
