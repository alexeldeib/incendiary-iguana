
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: secrets.azure.alexeldeib.xyz
spec:
  group: azure.alexeldeib.xyz
  names:
    kind: Secret
    plural: secrets
  scope: ""
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Secret is the Schema for the secrets API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SecretSpec defines the desired state of Secret
          properties:
            localName:
              description: LocalName is the desired name of the target Kubernetes
                secret. Defaults to Name if not specified.
              type: string
            location:
              description: Location is the Azure location of the resource group (e.g.,
                eastus2 or "West US"). Only required if Vault does not exist. Must
                be used it conjuction with ResourceGroup and SubscriptionID
              type: string
            name:
              description: Name is the name the corresponding Keyvault Secret.
              type: string
            resourceGroup:
              description: ResourceGroup contains the Keyvault. Only required if Vault
                does not exist. Must be used it conjuction with Location and SubscriptionID.
              type: string
            subscriptionId:
              description: SubscriptionID contains the Resource group. Is a GUID.
                Only required if Vault does not exist. Must be used it conjuction
                with Location and ResourceGroup.
              type: string
            vault:
              description: Vault is the name of the Keyvault where this secret should
                be stored.
              type: string
          required:
          - name
          - vault
          type: object
        status:
          description: SecretStatus defines the observed state of Secret
          properties:
            available:
              description: Available is true when the secret is ready for use in Kubernetes.
              type: boolean
            exists:
              description: 'TODO(ace): distinguish meaning more clearly. Exists is
                true when the secret exists in the remote Keyvault.'
              type: boolean
            generation:
              description: Generation is the last reconciled generation.
              format: int64
              type: integer
          required:
          - available
          - exists
          - generation
          type: object
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
